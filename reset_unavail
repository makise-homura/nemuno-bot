#!/bin/bash

DIRP=`/usr/bin/realpath "$0"`; DIR=`/usr/bin/dirname "$DIRP"`
[ -f "$DIR/$1.timestamp" ] && TS=`/bin/cat "$DIR/$1.timestamp"` || TS=0
[ -f "$DIR/limit" ] && SEC=`/bin/cat "$DIR/limit"` || SEC=3600
LIM=$((`/bin/date +%s` - $SEC))
if [ $TS -le $LIM ]
then
    BMC=`/bin/cat "$DIR/$1.bmc"`
    if [ "$BMC" ]
    then
        [ -f "$DIR/$BMC.user" ] && USER=`/bin/cat "$DIR/$BMC.pk"` || USER="root"
        [ -f "$DIR/$BMC.command" ] && CMD=`/bin/cat "$DIR/$BMC.pk"` || CMD="server_reset"
        if [ -f "$DIR/$BMC.pk" ]
        then
            /usr/bin/ssh -i "$DIR/$BMC.pk" -l "$USER" "$BMC" "$CMD"
        else
            /usr/bin/ssh -l "$USER" "$BMC" "$CMD"
        fi
        echo "Reset server $1 at `/bin/date`" >> "$DIR/$1.log"
        [ -f "$DIR/https_proxy" ] && export https_proxy=`/bin/cat "$DIR/https_proxy"`
        [ -f "$DIR/webhook" ] && /usr/bin/curl --data "{ \"content\": \"Notice: Server $1 was unavailable at `date`, performed cold reset.\" }" -H "Content-Type: application/json" -X POST `/bin/cat "$DIR/webhook"`
    else
        echo "Unable to reset server $1 at `/bin/date`: no BMC is known for it!" >> "$DIR/$1.log"
        exit 1
    fi
else
    echo "Server $1 is alive at `/bin/date`" >> "$DIR/$1.log"
fi
